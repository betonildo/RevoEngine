<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>0</y>
      <w>294</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>revo::ServiceProvider
--
// store window service
-mWindowService:revo::Window*
// store core services
-mCoreServices:std::vector&lt;revo::CoreService&gt;
//store context being used
-mContext:Context*
--
// set the windowing service
+setWindowService(windowService:revo::Window*):void
// use window core service
+createWindow(title:string,width:int,height:int):revo::Window*
// add a new core service
+addCoreService(coreService:revo::CoreService):void
// initialize all core services
+initCoreServices():void
// terminate all core services initialized
+terminateCoreServices():void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>707</x>
      <y>77</y>
      <w>175</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0;230.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>14</y>
      <w>98</w>
      <h>238</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0;10.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>294</x>
      <y>238</y>
      <w>98</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
revo::CoreService
--
+initialize():void
+terminate():void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>224</x>
      <y>126</y>
      <w>98</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>Core services
don't have any
external use
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>266</x>
      <y>168</y>
      <w>56</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>60.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>98</x>
      <y>217</y>
      <w>161</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>//This class implements
//the core service
//adaptition to use SDL2
//system.
revo::adapter::CoreServiceSDL2
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>182</x>
      <y>231</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>98</x>
      <y>252</y>
      <w>161</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>//This class implements
//the core service
//adaptition to use GLEW.
revo::adapter::CoreServiceGLEW
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>182</x>
      <y>266</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>574</x>
      <y>224</y>
      <w>161</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>//This class implements
//the window creation
//handled by SDL2 as an
//adapted service.
revo::adapter::WindowSDL2
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>644</x>
      <y>238</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>756</x>
      <y>224</y>
      <w>252</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
revo::Window
--
//Update the render buffer
+update():void
//Check if the window was closed
+closed():bool
//Create a new window
+create(title:string, width:int, height:int) : revo::Window*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>182</x>
      <y>301</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>98</x>
      <y>287</y>
      <w>161</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>//This class implements
//the core service
//adaptition to use GLEW.
revo::adapter::CoreServiceOpenGL
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>378</y>
      <w>189</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>// This is where shaders are going to be handled
revo::graphics::Shader
--
+load(vertPath:char*,fragPath:char*):void
+bind():void
+unbind():void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>560</y>
      <w>189</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>// This is a file utils
revo::utils::File
--
//reads all content as text from a determined file at path 
//and returns it
_+readAllText(path:std::string):std::string_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>203</x>
      <y>742</y>
      <w>196</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>revo::maths::Vector4
--
+x
+y
+z
+w
--
operator float():const float*
_+operator+(u:Vector4,v:Vector4):Vector4_
_+operator-(u:Vector4,v:Vector4):Vector4_
_+operator*(u:Vector4,v:Vector4):Vector4_
_+operator/(u:Vector4,v:Vector4):Vector4_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>203</x>
      <y>497</y>
      <w>196</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>revo::maths::Vector2
--
+x
+y
--
operator float():const float*
_+operator+(u:Vector2,v:Vector2):Vector2_
_+operator-(u:Vector2,v:Vector2):Vector2_
_+operator*(u:Vector2,v:Vector2):Vector2_
_+operator/(u:Vector2,v:Vector2):Vector2_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>203</x>
      <y>616</y>
      <w>196</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>revo::maths::Vector3
--
+x
+y
+z
--
operator float():const float*
_+operator+(u:Vector3,v:Vector3):Vector3_
_+operator-(u:Vector3,v:Vector3):Vector3_
_+operator*(u:Vector3,v:Vector3):Vector3_
_+operator/(u:Vector3,v:Vector3):Vector3_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>182</x>
      <y>882</y>
      <w>217</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>revo::maths::Matrix4x4
--
-elements:float[]
--
operator float():const float*
_+operator+(u:Matrix4x4,v:Matrix4x4):Matrix4x4_
_+operator-(u:Matrix4x4,v:Matrix4x4):Matrix4x4_
_+operator*(u:Matrix4x4,v:Matrix4x4):Matrix4x4_
_+operator*(u:Matrix4x4,v:Vector3):Vector3_
_+operator*(u:Matrix4x4,v:Vector4):Vector4_
_+operator/(u:Matrix4x4,v:Matrix4x4):Matrix4x4_
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
